***Test For Matrix Divided Task

Function Import:

    >>> matrix_divided = __import__('2-matrix_divided').matrix_divided

Test Scenarios:

    >>> matrix_divided([[55, 2.2, 3.3], [1.4, 1.5, 96]], 3)
        [[18.33, 0.73, 1.1], [0.47, 0.5, 32.0]]

     >>> matrix_divided([[100, 13, 11], [3, 2]], 3)
        Traceback (most recent call last):
	    TypeError: Each row of the matrix must have the same size

    >>> matrix_divided([["Matrix", "Divided"], [2, 1]], 3)
        Traceback (most recent call last):
	    TypeError: matrix must be a matrix (list of lists) of integers/floats

    >>> matrix_divided([[2, 4], [3, 7]], "Boom")
        Traceback (most recent call last):
	    TypeError: div must be a number

    >>> matrix_divided(False, 9)
        Traceback (most recent call last):
	    TypeError: matrix must be a matrix (list of lists) of integers/floats

    >>> matrix_divided([[3, 4], [6, 7]], -2)
        [[-1.5, -2.0], [-3.0, -3.5]]

    >>> matrix_divided([[2, 3], [4, 5]], float('inf'))
        [[0.0, 0.0], [0.0, 0.0]]

    >>> matrix_divided([[1.3, 4.15], [8, 7]], 0)
        Traceback (most recent call last):
	    ZeroDivisionError: division by zero

    >>> matrix = [[1, 2, 3]]
        >>> matrix_divided(matrix, 3)
	    [[0.33, 0.67, 1.0]]
	        >>> print(matrix)
		    [[1, 2, 3]]

    >>> matrix_divided([[3, 4]])
        Traceback (most recent call last):
	    TypeError: matrix_divided() missing 1 required positional argument: 'div'

    >>> matrix_divided()
        Traceback (most recent call last):
	    TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'
